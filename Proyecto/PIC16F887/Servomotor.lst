CCS PCM C Compiler, Version 5.115d, 1               01-sep.-23 14:32
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\victo\OneDrive\Documentos\X-TRAINER-hands-on\CCS\PIC16F\13-Servomotor-CCS-PIC16F887-877A\Proyecto\PIC16F887\Servomotor.lst

               ROM used:   1329 words (16%)
                           Largest free fragment is 2048
               RAM used:   30 (8%) at main() level
                           64 (17%) worst case
               Stack used: 4 locations (2 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  04
0001:  MOVWF  0A
0002:  GOTO   4C8
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   051
.................... /************************************************************************************************
.................... Company:
.................... Microside Technology Inc.
.................... File Name:
.................... Servomotor.c
.................... Product Revision  :  1
.................... Device            :  X-TRAINER
.................... Driver Version    :  1.0
.................... ************************************************************************************************/
.................... 
.................... /*
.................... ---------------------------------------------------------------------------
.................... Controlar la posicíon de un servo por medio del módulo PWM interno
.................... ---------------------------------------------------------------------------
.................... */
.................... 
.................... #include <16F887.h>                  //Incluye el microcontrolador con el que se va a trabajar
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
0031:  MOVF   57,W
0032:  ANDLW  07
0033:  MOVWF  77
0034:  RRF    57,W
0035:  MOVWF  78
0036:  RRF    78,F
0037:  RRF    78,F
0038:  MOVLW  1F
0039:  ANDWF  78,F
003A:  MOVF   78,W
003B:  ADDWF  59,W
003C:  MOVWF  04
003D:  BCF    03.7
003E:  BTFSC  5A.0
003F:  BSF    03.7
0040:  CLRF   78
0041:  INCF   78,F
0042:  INCF   77,F
0043:  GOTO   045
0044:  RLF    78,F
0045:  DECFSZ 77,F
0046:  GOTO   044
0047:  MOVF   58,F
0048:  BTFSC  03.2
0049:  GOTO   04D
004A:  MOVF   78,W
004B:  IORWF  00,F
004C:  GOTO   050
004D:  COMF   78,F
004E:  MOVF   78,W
004F:  ANDWF  00,F
0050:  RETURN
*
00D1:  MOVF   45,W
00D2:  BTFSC  03.2
00D3:  GOTO   141
00D4:  MOVWF  4D
00D5:  MOVF   49,W
00D6:  BTFSC  03.2
00D7:  GOTO   141
00D8:  ADDWF  4D,F
00D9:  BTFSC  03.0
00DA:  GOTO   0E2
00DB:  MOVLW  7F
00DC:  SUBWF  4D,F
00DD:  BTFSS  03.0
00DE:  GOTO   141
00DF:  BTFSC  03.2
00E0:  GOTO   141
00E1:  GOTO   0E6
00E2:  MOVLW  81
00E3:  ADDWF  4D,F
00E4:  BTFSC  03.0
00E5:  GOTO   141
00E6:  MOVF   4D,W
00E7:  MOVWF  77
00E8:  CLRF   78
00E9:  CLRF   79
00EA:  CLRF   7A
00EB:  MOVF   46,W
00EC:  MOVWF  51
00ED:  BSF    51.7
00EE:  MOVF   47,W
00EF:  MOVWF  50
00F0:  MOVF   48,W
00F1:  MOVWF  4F
00F2:  MOVLW  18
00F3:  MOVWF  4D
00F4:  CLRF   4E
00F5:  BTFSS  4F.0
00F6:  GOTO   10F
00F7:  MOVF   4C,W
00F8:  ADDWF  7A,F
00F9:  BTFSS  03.0
00FA:  GOTO   101
00FB:  INCF   79,F
00FC:  BTFSS  03.2
00FD:  GOTO   101
00FE:  INCF   78,F
00FF:  BTFSC  03.2
0100:  BSF    4E.7
0101:  MOVF   4B,W
0102:  ADDWF  79,F
0103:  BTFSS  03.0
0104:  GOTO   108
0105:  INCF   78,F
0106:  BTFSC  03.2
0107:  BSF    4E.7
0108:  MOVF   4A,W
0109:  MOVWF  47
010A:  BSF    47.7
010B:  MOVF   47,W
010C:  ADDWF  78,F
010D:  BTFSC  03.0
010E:  BSF    4E.7
010F:  RLF    4E,F
0110:  RRF    78,F
0111:  RRF    79,F
0112:  RRF    7A,F
0113:  RRF    51,F
0114:  RRF    50,F
0115:  RRF    4F,F
0116:  BCF    03.0
0117:  DECFSZ 4D,F
0118:  GOTO   0F4
0119:  MOVLW  01
011A:  ADDWF  77,F
011B:  BTFSC  03.0
011C:  GOTO   141
011D:  BTFSC  78.7
011E:  GOTO   126
011F:  RLF    51,F
0120:  RLF    7A,F
0121:  RLF    79,F
0122:  RLF    78,F
0123:  DECF   77,F
0124:  BTFSC  03.2
0125:  GOTO   141
0126:  BTFSS  51.7
0127:  GOTO   137
0128:  INCF   7A,F
0129:  BTFSS  03.2
012A:  GOTO   137
012B:  INCF   79,F
012C:  BTFSS  03.2
012D:  GOTO   137
012E:  INCF   78,F
012F:  BTFSS  03.2
0130:  GOTO   137
0131:  RRF    78,F
0132:  RRF    79,F
0133:  RRF    7A,F
0134:  INCF   77,F
0135:  BTFSC  03.2
0136:  GOTO   141
0137:  MOVF   46,W
0138:  MOVWF  4E
0139:  MOVF   4A,W
013A:  XORWF  4E,F
013B:  BTFSS  4E.7
013C:  GOTO   13F
013D:  BSF    78.7
013E:  GOTO   145
013F:  BCF    78.7
0140:  GOTO   145
0141:  CLRF   77
0142:  CLRF   78
0143:  CLRF   79
0144:  CLRF   7A
0145:  RETURN
0146:  MOVF   46,W
0147:  MOVWF  4D
0148:  MOVF   4A,W
0149:  XORWF  4D,F
014A:  BTFSS  4D.7
014B:  GOTO   151
014C:  BCF    03.2
014D:  BCF    03.0
014E:  BTFSC  46.7
014F:  BSF    03.0
0150:  GOTO   184
0151:  MOVF   46,W
0152:  MOVWF  4D
0153:  MOVF   49,W
0154:  MOVWF  4E
0155:  MOVF   45,W
0156:  SUBWF  4E,F
0157:  BTFSC  03.2
0158:  GOTO   15F
0159:  BTFSS  4D.7
015A:  GOTO   184
015B:  MOVF   03,W
015C:  XORLW  01
015D:  MOVWF  03
015E:  GOTO   184
015F:  MOVF   4A,W
0160:  MOVWF  4E
0161:  MOVF   46,W
0162:  SUBWF  4E,F
0163:  BTFSC  03.2
0164:  GOTO   16B
0165:  BTFSS  4D.7
0166:  GOTO   184
0167:  MOVF   03,W
0168:  XORLW  01
0169:  MOVWF  03
016A:  GOTO   184
016B:  MOVF   4B,W
016C:  MOVWF  4E
016D:  MOVF   47,W
016E:  SUBWF  4E,F
016F:  BTFSC  03.2
0170:  GOTO   177
0171:  BTFSS  4D.7
0172:  GOTO   184
0173:  MOVF   03,W
0174:  XORLW  01
0175:  MOVWF  03
0176:  GOTO   184
0177:  MOVF   4C,W
0178:  MOVWF  4E
0179:  MOVF   48,W
017A:  SUBWF  4E,F
017B:  BTFSC  03.2
017C:  GOTO   183
017D:  BTFSS  4D.7
017E:  GOTO   184
017F:  MOVF   03,W
0180:  XORLW  01
0181:  MOVWF  03
0182:  GOTO   184
0183:  BCF    03.0
0184:  RETURN
0185:  MOVF   49,W
0186:  BTFSC  03.2
0187:  GOTO   24A
0188:  MOVWF  55
0189:  MOVF   4D,W
018A:  BTFSC  03.2
018B:  GOTO   24A
018C:  SUBWF  55,F
018D:  BTFSS  03.0
018E:  GOTO   194
018F:  MOVLW  7F
0190:  ADDWF  55,F
0191:  BTFSC  03.0
0192:  GOTO   24A
0193:  GOTO   19A
0194:  MOVLW  81
0195:  SUBWF  55,F
0196:  BTFSS  03.0
0197:  GOTO   24A
0198:  BTFSC  03.2
0199:  GOTO   24A
019A:  MOVF   55,W
019B:  MOVWF  77
019C:  CLRF   78
019D:  CLRF   79
019E:  CLRF   7A
019F:  CLRF   54
01A0:  MOVF   4A,W
01A1:  MOVWF  53
01A2:  BSF    53.7
01A3:  MOVF   4B,W
01A4:  MOVWF  52
01A5:  MOVF   4C,W
01A6:  MOVWF  51
01A7:  MOVLW  19
01A8:  MOVWF  55
01A9:  MOVF   50,W
01AA:  SUBWF  51,F
01AB:  BTFSC  03.0
01AC:  GOTO   1BD
01AD:  MOVLW  01
01AE:  SUBWF  52,F
01AF:  BTFSC  03.0
01B0:  GOTO   1BD
01B1:  SUBWF  53,F
01B2:  BTFSC  03.0
01B3:  GOTO   1BD
01B4:  SUBWF  54,F
01B5:  BTFSC  03.0
01B6:  GOTO   1BD
01B7:  INCF   54,F
01B8:  INCF   53,F
01B9:  INCF   52,F
01BA:  MOVF   50,W
01BB:  ADDWF  51,F
01BC:  GOTO   1EF
01BD:  MOVF   4F,W
01BE:  SUBWF  52,F
01BF:  BTFSC  03.0
01C0:  GOTO   1D8
01C1:  MOVLW  01
01C2:  SUBWF  53,F
01C3:  BTFSC  03.0
01C4:  GOTO   1D8
01C5:  SUBWF  54,F
01C6:  BTFSC  03.0
01C7:  GOTO   1D8
01C8:  INCF   54,F
01C9:  INCF   53,F
01CA:  MOVF   4F,W
01CB:  ADDWF  52,F
01CC:  MOVF   50,W
01CD:  ADDWF  51,F
01CE:  BTFSS  03.0
01CF:  GOTO   1EF
01D0:  INCF   52,F
01D1:  BTFSS  03.2
01D2:  GOTO   1EF
01D3:  INCF   53,F
01D4:  BTFSS  03.2
01D5:  GOTO   1EF
01D6:  INCF   54,F
01D7:  GOTO   1EF
01D8:  MOVF   4E,W
01D9:  IORLW  80
01DA:  SUBWF  53,F
01DB:  BTFSC  03.0
01DC:  GOTO   1EE
01DD:  MOVLW  01
01DE:  SUBWF  54,F
01DF:  BTFSC  03.0
01E0:  GOTO   1EE
01E1:  INCF   54,F
01E2:  MOVF   4E,W
01E3:  IORLW  80
01E4:  ADDWF  53,F
01E5:  MOVF   4F,W
01E6:  ADDWF  52,F
01E7:  BTFSS  03.0
01E8:  GOTO   1CC
01E9:  INCF   53,F
01EA:  BTFSS  03.2
01EB:  GOTO   1CC
01EC:  INCF   54,F
01ED:  GOTO   1CC
01EE:  BSF    7A.0
01EF:  DECFSZ 55,F
01F0:  GOTO   1F2
01F1:  GOTO   1FD
01F2:  BCF    03.0
01F3:  RLF    51,F
01F4:  RLF    52,F
01F5:  RLF    53,F
01F6:  RLF    54,F
01F7:  BCF    03.0
01F8:  RLF    7A,F
01F9:  RLF    79,F
01FA:  RLF    78,F
01FB:  RLF    56,F
01FC:  GOTO   1A9
01FD:  BTFSS  56.0
01FE:  GOTO   205
01FF:  BCF    03.0
0200:  RRF    78,F
0201:  RRF    79,F
0202:  RRF    7A,F
0203:  RRF    56,F
0204:  GOTO   208
0205:  DECF   77,F
0206:  BTFSC  03.2
0207:  GOTO   24A
0208:  BTFSC  56.7
0209:  GOTO   231
020A:  BCF    03.0
020B:  RLF    51,F
020C:  RLF    52,F
020D:  RLF    53,F
020E:  RLF    54,F
020F:  MOVF   50,W
0210:  SUBWF  51,F
0211:  BTFSC  03.0
0212:  GOTO   21D
0213:  MOVLW  01
0214:  SUBWF  52,F
0215:  BTFSC  03.0
0216:  GOTO   21D
0217:  SUBWF  53,F
0218:  BTFSC  03.0
0219:  GOTO   21D
021A:  SUBWF  54,F
021B:  BTFSS  03.0
021C:  GOTO   240
021D:  MOVF   4F,W
021E:  SUBWF  52,F
021F:  BTFSC  03.0
0220:  GOTO   228
0221:  MOVLW  01
0222:  SUBWF  53,F
0223:  BTFSC  03.0
0224:  GOTO   228
0225:  SUBWF  54,F
0226:  BTFSS  03.0
0227:  GOTO   240
0228:  MOVF   4E,W
0229:  IORLW  80
022A:  SUBWF  53,F
022B:  BTFSC  03.0
022C:  GOTO   231
022D:  MOVLW  01
022E:  SUBWF  54,F
022F:  BTFSS  03.0
0230:  GOTO   240
0231:  INCF   7A,F
0232:  BTFSS  03.2
0233:  GOTO   240
0234:  INCF   79,F
0235:  BTFSS  03.2
0236:  GOTO   240
0237:  INCF   78,F
0238:  BTFSS  03.2
0239:  GOTO   240
023A:  INCF   77,F
023B:  BTFSC  03.2
023C:  GOTO   24A
023D:  RRF    78,F
023E:  RRF    79,F
023F:  RRF    7A,F
0240:  MOVF   4A,W
0241:  MOVWF  55
0242:  MOVF   4E,W
0243:  XORWF  55,F
0244:  BTFSS  55.7
0245:  GOTO   248
0246:  BSF    78.7
0247:  GOTO   24E
0248:  BCF    78.7
0249:  GOTO   24E
024A:  CLRF   77
024B:  CLRF   78
024C:  CLRF   79
024D:  CLRF   7A
024E:  RETURN
024F:  MOVLW  80
0250:  BTFSC  03.1
0251:  XORWF  4A,F
0252:  CLRF   4F
0253:  CLRF   50
0254:  MOVF   46,W
0255:  MOVWF  4E
0256:  MOVF   4A,W
0257:  XORWF  4E,F
0258:  MOVF   45,W
0259:  BTFSC  03.2
025A:  GOTO   33F
025B:  MOVWF  4D
025C:  MOVWF  77
025D:  MOVF   49,W
025E:  BTFSC  03.2
025F:  GOTO   348
0260:  SUBWF  4D,F
0261:  BTFSC  03.2
0262:  GOTO   2E4
0263:  BTFSS  03.0
0264:  GOTO   2A2
0265:  MOVF   4A,W
0266:  MOVWF  53
0267:  BSF    53.7
0268:  MOVF   4B,W
0269:  MOVWF  52
026A:  MOVF   4C,W
026B:  MOVWF  51
026C:  CLRF   50
026D:  BCF    03.0
026E:  RRF    53,F
026F:  RRF    52,F
0270:  RRF    51,F
0271:  RRF    50,F
0272:  DECFSZ 4D,F
0273:  GOTO   26C
0274:  BTFSS  4E.7
0275:  GOTO   279
0276:  BSF    4F.0
0277:  GOTO   35C
0278:  BCF    4F.0
0279:  BCF    4D.0
027A:  BSF    4F.4
027B:  MOVLW  48
027C:  MOVWF  04
027D:  BCF    03.7
027E:  GOTO   371
027F:  BCF    4F.4
0280:  BTFSC  4E.7
0281:  GOTO   28C
0282:  BTFSS  4D.0
0283:  GOTO   297
0284:  RRF    53,F
0285:  RRF    52,F
0286:  RRF    51,F
0287:  RRF    50,F
0288:  INCF   77,F
0289:  BTFSC  03.2
028A:  GOTO   357
028B:  GOTO   297
028C:  BTFSC  53.7
028D:  GOTO   29A
028E:  BCF    03.0
028F:  RLF    50,F
0290:  RLF    51,F
0291:  RLF    52,F
0292:  RLF    53,F
0293:  DECF   77,F
0294:  BTFSC  03.2
0295:  GOTO   357
0296:  GOTO   28C
0297:  BSF    4F.6
0298:  GOTO   304
0299:  BCF    4F.6
029A:  MOVF   46,W
029B:  MOVWF  4E
029C:  BTFSS  4E.7
029D:  GOTO   2A0
029E:  BSF    53.7
029F:  GOTO   350
02A0:  BCF    53.7
02A1:  GOTO   350
02A2:  MOVF   49,W
02A3:  MOVWF  4D
02A4:  MOVWF  77
02A5:  MOVF   45,W
02A6:  SUBWF  4D,F
02A7:  MOVF   46,W
02A8:  MOVWF  53
02A9:  BSF    53.7
02AA:  MOVF   47,W
02AB:  MOVWF  52
02AC:  MOVF   48,W
02AD:  MOVWF  51
02AE:  CLRF   50
02AF:  BCF    03.0
02B0:  RRF    53,F
02B1:  RRF    52,F
02B2:  RRF    51,F
02B3:  RRF    50,F
02B4:  DECFSZ 4D,F
02B5:  GOTO   2AE
02B6:  BTFSS  4E.7
02B7:  GOTO   2BB
02B8:  BSF    4F.1
02B9:  GOTO   35C
02BA:  BCF    4F.1
02BB:  BCF    4D.0
02BC:  BSF    4F.5
02BD:  MOVLW  4C
02BE:  MOVWF  04
02BF:  BCF    03.7
02C0:  GOTO   371
02C1:  BCF    4F.5
02C2:  BTFSC  4E.7
02C3:  GOTO   2CE
02C4:  BTFSS  4D.0
02C5:  GOTO   2D9
02C6:  RRF    53,F
02C7:  RRF    52,F
02C8:  RRF    51,F
02C9:  RRF    50,F
02CA:  INCF   77,F
02CB:  BTFSC  03.2
02CC:  GOTO   357
02CD:  GOTO   2D9
02CE:  BTFSC  53.7
02CF:  GOTO   2DC
02D0:  BCF    03.0
02D1:  RLF    50,F
02D2:  RLF    51,F
02D3:  RLF    52,F
02D4:  RLF    53,F
02D5:  DECF   77,F
02D6:  BTFSC  03.2
02D7:  GOTO   357
02D8:  GOTO   2CE
02D9:  BSF    4F.7
02DA:  GOTO   304
02DB:  BCF    4F.7
02DC:  MOVF   4A,W
02DD:  MOVWF  4E
02DE:  BTFSS  4E.7
02DF:  GOTO   2E2
02E0:  BSF    53.7
02E1:  GOTO   350
02E2:  BCF    53.7
02E3:  GOTO   350
02E4:  MOVF   4A,W
02E5:  MOVWF  53
02E6:  BSF    53.7
02E7:  MOVF   4B,W
02E8:  MOVWF  52
02E9:  MOVF   4C,W
02EA:  MOVWF  51
02EB:  BTFSS  4E.7
02EC:  GOTO   2F1
02ED:  BCF    53.7
02EE:  BSF    4F.2
02EF:  GOTO   35C
02F0:  BCF    4F.2
02F1:  CLRF   50
02F2:  BCF    4D.0
02F3:  MOVLW  48
02F4:  MOVWF  04
02F5:  BCF    03.7
02F6:  GOTO   371
02F7:  BTFSC  4E.7
02F8:  GOTO   31A
02F9:  MOVF   46,W
02FA:  MOVWF  4E
02FB:  BTFSS  4D.0
02FC:  GOTO   304
02FD:  RRF    53,F
02FE:  RRF    52,F
02FF:  RRF    51,F
0300:  RRF    50,F
0301:  INCF   77,F
0302:  BTFSC  03.2
0303:  GOTO   357
0304:  BTFSS  50.7
0305:  GOTO   315
0306:  INCF   51,F
0307:  BTFSS  03.2
0308:  GOTO   315
0309:  INCF   52,F
030A:  BTFSS  03.2
030B:  GOTO   315
030C:  INCF   53,F
030D:  BTFSS  03.2
030E:  GOTO   315
030F:  RRF    53,F
0310:  RRF    52,F
0311:  RRF    51,F
0312:  INCF   77,F
0313:  BTFSC  03.2
0314:  GOTO   357
0315:  BTFSC  4F.6
0316:  GOTO   299
0317:  BTFSC  4F.7
0318:  GOTO   2DB
0319:  GOTO   339
031A:  MOVLW  80
031B:  XORWF  53,F
031C:  BTFSS  53.7
031D:  GOTO   322
031E:  GOTO   35C
031F:  MOVF   4A,W
0320:  MOVWF  4E
0321:  GOTO   32F
0322:  MOVF   46,W
0323:  MOVWF  4E
0324:  MOVF   53,F
0325:  BTFSS  03.2
0326:  GOTO   32F
0327:  MOVF   52,F
0328:  BTFSS  03.2
0329:  GOTO   32F
032A:  MOVF   51,F
032B:  BTFSS  03.2
032C:  GOTO   32F
032D:  CLRF   77
032E:  GOTO   350
032F:  BTFSC  53.7
0330:  GOTO   339
0331:  BCF    03.0
0332:  RLF    50,F
0333:  RLF    51,F
0334:  RLF    52,F
0335:  RLF    53,F
0336:  DECFSZ 77,F
0337:  GOTO   32F
0338:  GOTO   357
0339:  BTFSS  4E.7
033A:  GOTO   33D
033B:  BSF    53.7
033C:  GOTO   350
033D:  BCF    53.7
033E:  GOTO   350
033F:  MOVF   49,W
0340:  MOVWF  77
0341:  MOVF   4A,W
0342:  MOVWF  53
0343:  MOVF   4B,W
0344:  MOVWF  52
0345:  MOVF   4C,W
0346:  MOVWF  51
0347:  GOTO   350
0348:  MOVF   45,W
0349:  MOVWF  77
034A:  MOVF   46,W
034B:  MOVWF  53
034C:  MOVF   47,W
034D:  MOVWF  52
034E:  MOVF   48,W
034F:  MOVWF  51
0350:  MOVF   53,W
0351:  MOVWF  78
0352:  MOVF   52,W
0353:  MOVWF  79
0354:  MOVF   51,W
0355:  MOVWF  7A
0356:  GOTO   38F
0357:  CLRF   77
0358:  CLRF   78
0359:  CLRF   79
035A:  CLRF   7A
035B:  GOTO   38F
035C:  CLRF   50
035D:  COMF   51,F
035E:  COMF   52,F
035F:  COMF   53,F
0360:  COMF   50,F
0361:  INCF   50,F
0362:  BTFSS  03.2
0363:  GOTO   36A
0364:  INCF   51,F
0365:  BTFSS  03.2
0366:  GOTO   36A
0367:  INCF   52,F
0368:  BTFSC  03.2
0369:  INCF   53,F
036A:  BTFSC  4F.0
036B:  GOTO   278
036C:  BTFSC  4F.1
036D:  GOTO   2BA
036E:  BTFSC  4F.2
036F:  GOTO   2F0
0370:  GOTO   31F
0371:  MOVF   00,W
0372:  ADDWF  51,F
0373:  BTFSS  03.0
0374:  GOTO   37B
0375:  INCF   52,F
0376:  BTFSS  03.2
0377:  GOTO   37B
0378:  INCF   53,F
0379:  BTFSC  03.2
037A:  BSF    4D.0
037B:  DECF   04,F
037C:  MOVF   00,W
037D:  ADDWF  52,F
037E:  BTFSS  03.0
037F:  GOTO   383
0380:  INCF   53,F
0381:  BTFSC  03.2
0382:  BSF    4D.0
0383:  DECF   04,F
0384:  MOVF   00,W
0385:  BTFSS  00.7
0386:  XORLW  80
0387:  ADDWF  53,F
0388:  BTFSC  03.0
0389:  BSF    4D.0
038A:  BTFSC  4F.4
038B:  GOTO   27F
038C:  BTFSC  4F.5
038D:  GOTO   2C1
038E:  GOTO   2F7
038F:  RETURN
0390:  MOVLW  8E
0391:  MOVWF  77
0392:  MOVF   45,W
0393:  SUBWF  77,F
0394:  MOVF   46,W
0395:  MOVWF  79
0396:  MOVF   47,W
0397:  MOVWF  78
0398:  BSF    79.7
0399:  MOVF   77,F
039A:  BTFSC  03.2
039B:  GOTO   3A7
039C:  BCF    03.0
039D:  MOVF   79,F
039E:  BTFSS  03.2
039F:  GOTO   3A3
03A0:  MOVF   78,F
03A1:  BTFSC  03.2
03A2:  GOTO   3A7
03A3:  RRF    79,F
03A4:  RRF    78,F
03A5:  DECFSZ 77,F
03A6:  GOTO   39C
03A7:  BTFSS  46.7
03A8:  GOTO   3AE
03A9:  COMF   78,F
03AA:  COMF   79,F
03AB:  INCF   78,F
03AC:  BTFSC  03.2
03AD:  INCF   79,F
03AE:  RETURN
*
03B8:  MOVLW  8E
03B9:  MOVWF  77
03BA:  MOVF   3E,W
03BB:  MOVWF  78
03BC:  MOVF   3D,W
03BD:  MOVWF  79
03BE:  CLRF   7A
03BF:  MOVF   78,F
03C0:  BTFSS  03.2
03C1:  GOTO   3CC
03C2:  MOVF   79,W
03C3:  MOVWF  78
03C4:  CLRF   79
03C5:  MOVLW  08
03C6:  SUBWF  77,F
03C7:  MOVF   78,F
03C8:  BTFSS  03.2
03C9:  GOTO   3CC
03CA:  CLRF   77
03CB:  GOTO   3D4
03CC:  BCF    03.0
03CD:  BTFSC  78.7
03CE:  GOTO   3D3
03CF:  RLF    79,F
03D0:  RLF    78,F
03D1:  DECF   77,F
03D2:  GOTO   3CC
03D3:  BCF    78.7
.................... 
.................... #list
.................... 
.................... #include "Servo.h"
.................... /************************************************************************************************
.................... Company:
.................... Microside Technology Inc.
.................... File Name:
.................... Servo.c
.................... Product Revision  :  1
.................... Driver Version    :  0.9beta1
.................... 
.................... Disclaimer:
.................... ** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.................... ** OF MERCHANTABILITY, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
.................... ** TO THE WARRANTIES FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.................... ** IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM,
.................... ** DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
.................... ** OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
.................... ** OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
.................... ************************************************************************************************/
.................... 
.................... /*!
....................  * @file  Servo.h
....................  * @brief Small Servo library using Timer1 interruption technique.
....................           For testing purposes only DO NOT USE on producion.
....................  */
....................  
.................... // TODO: This library throws a warning for a possible race condition, fix by 
.................... //       initial release
.................... 
.................... #ifndef _SERVO_H_
.................... #define _SERVO_H_
.................... 
.................... // -------------------------------------------------------------- PUBLIC MACROS
.................... 
.................... // If needed to be used with a different FOSC, define this value to the
.................... // appropiate frequency in Hertz.
.................... #ifndef SERVO_FOSC
.................... #define SERVO_FOSC 20000000
.................... #endif
.................... 
.................... // Hobby servos work by measuring the duty cycle from 1ms to 2ms, then adjusting
.................... // the position proportionately from 0 to 180, however most of them have different
.................... // offsets, calibrate the following values to match your servo position 
.................... 
.................... // Seconds that generate a 0° turn
.................... #ifndef SERVO_MIN_POS
.................... #define SERVO_MIN_POS 0.0004
.................... #endif
.................... 
.................... // Seconds that generate a 180° turn
.................... #ifndef SERVO_MAX_POS
.................... #define SERVO_MAX_POS 0.0027
.................... #endif
.................... 
.................... // Interval between 0° and 180° turn in seconds
.................... #define SERVO_DUTY_CYCLE_POS (SERVO_MAX_POS - SERVO_MIN_POS)
.................... 
.................... // Time needed to complement a 50Hz
.................... #define SERVO_FREQ_COMPLEMENT 0.02 - SERVO_MAX_POS
.................... 
.................... // Timer1 preescaler used, bigger values reduce control accuracy, values too
.................... // small might result in errors.
.................... #ifndef SERVO_T_PREESCALER
.................... #define SERVO_T_PREESCALER 2
.................... #endif
.................... 
.................... // Values for Timer1 interruption 
.................... #define SERVO_MIN_POS_T1_VALUE (unsigned int16)(65535 - ( (SERVO_FOSC * SERVO_MIN_POS)/(4 * SERVO_T_PREESCALER) ))
.................... 
.................... #define SERVO_FREQ_COMPLEMENT_VALUE (unsigned int16)(65535 - ( (SERVO_FOSC * SERVO_FREQ_COMPLEMENT)/(4 * SERVO_T_PREESCALER) ))
.................... 
.................... #define SERVO_MAX_COMPLEMENT (unsigned int16)(65535 - ( ( SERVO_FOSC * ( SERVO_DUTY_CYCLE_POS ) ) / (4 * SERVO_T_PREESCALER) ) )
.................... 
.................... // ------------------------------------------------------------------ VARIABLES
.................... 
.................... // Counter used to keep track of the pin level and the preloaded value for Timer1
.................... unsigned int8 __servo_array_pointer = 0;
.................... 
.................... // Signal generation array and pin status
.................... // TODO: implement multiple server control, it should be doable to control up to 16 servos
.................... // using only Timer1, rewriting this section might also reduce memory consumtion
.................... unsigned int16 __servoSignal[4] = { SERVO_MIN_POS_T1_VALUE, 65535, SERVO_MAX_COMPLEMENT, SERVO_FREQ_COMPLEMENT_VALUE };
*
04E0:  MOVLW  17
04E1:  BCF    03.6
04E2:  MOVWF  29
04E3:  MOVLW  FC
04E4:  MOVWF  2A
04E5:  MOVLW  FF
04E6:  MOVWF  2B
04E7:  MOVWF  2C
04E8:  MOVLW  89
04E9:  MOVWF  2D
04EA:  MOVLW  E9
04EB:  MOVWF  2E
04EC:  MOVLW  AF
04ED:  MOVWF  2F
04EE:  MOVLW  3C
04EF:  MOVWF  30
.................... unsigned int8  __onOffMap[4] = {1,1,0,0};
04F0:  MOVLW  01
04F1:  MOVWF  31
04F2:  MOVWF  32
04F3:  CLRF   33
04F4:  CLRF   34
.................... 
.................... // Output pin
.................... int16 __servo_pin = -1;
.................... 
.................... // ----------------------------------------------- PUBLIC FUNCTION DECLARATIONS
.................... 
.................... /**
....................  * @brief Interrupt handler.
....................  * 
....................  * @description This function preload Timer1 next value and changes the output
....................  *              pin
....................  */
.................... #int_timer1
.................... void TIMER1_isr() {
....................    __servo_array_pointer++;
*
0051:  INCF   28,F
....................    if(__servo_array_pointer > 3) __servo_array_pointer = 0;
0052:  MOVF   28,W
0053:  SUBLW  03
0054:  BTFSS  03.0
0055:  CLRF   28
....................    setup_timer_1 ( T1_DISABLED );
0056:  CLRF   10
....................    set_timer1( __servoSignal[__servo_array_pointer] );
0057:  BCF    03.0
0058:  RLF    28,W
0059:  ADDLW  29
005A:  MOVWF  04
005B:  BCF    03.7
005C:  INCF   04,F
005D:  MOVF   00,W
005E:  MOVWF  58
005F:  DECF   04,F
0060:  MOVF   00,W
0061:  MOVWF  57
0062:  CLRF   0E
0063:  MOVF   58,W
0064:  MOVWF  0F
0065:  MOVF   57,W
0066:  MOVWF  0E
0067:  NOP
....................    if ( __onOffMap[__servo_array_pointer] == 1 )
0068:  MOVLW  31
0069:  ADDWF  28,W
006A:  MOVWF  04
006B:  BCF    03.7
006C:  DECFSZ 00,W
006D:  GOTO   07D
....................       output_high(__servo_pin);
006E:  MOVF   35,W
006F:  MOVWF  57
0070:  MOVLW  01
0071:  MOVWF  58
0072:  CLRF   5A
0073:  CLRF   59
0074:  CALL   031
0075:  MOVF   35,W
0076:  MOVWF  57
0077:  CLRF   58
0078:  CLRF   5A
0079:  MOVLW  80
007A:  MOVWF  59
007B:  CALL   031
007C:  GOTO   08A
....................     else
....................       output_low(__servo_pin);
007D:  MOVF   35,W
007E:  MOVWF  57
007F:  CLRF   58
0080:  CLRF   5A
0081:  CLRF   59
0082:  CALL   031
0083:  MOVF   35,W
0084:  MOVWF  57
0085:  CLRF   58
0086:  CLRF   5A
0087:  MOVLW  80
0088:  MOVWF  59
0089:  CALL   031
....................     setup_timer_1 ( T1_INTERNAL | T1_DIV_BY_2 );
008A:  MOVLW  15
008B:  MOVWF  10
008C:  BCF    0C.0
008D:  BCF    0A.3
008E:  BCF    0A.4
008F:  GOTO   01D
.................... }
.................... 
.................... /**
....................  * @brief Servo signal setup.
....................  * 
....................  * @param Output pin
....................  *
....................  * @description This function sets Timer1, Global interruptions and the output
....................  *              pin
....................  */
.................... void setup_servo( int16 output_pin ) {
....................    __servo_array_pointer = 0;
0090:  CLRF   28
....................    
....................    set_timer1( 0 );
0091:  CLRF   0E
0092:  CLRF   0F
0093:  CLRF   0E
0094:  NOP
....................    
....................    enable_interrupts( INT_TIMER1 );
0095:  BSF    03.5
0096:  BSF    0C.0
....................    enable_interrupts( GLOBAL );
0097:  MOVLW  C0
0098:  BCF    03.5
0099:  IORWF  0B,F
....................    
....................    __servo_pin = output_pin;
009A:  MOVF   39,W
009B:  MOVWF  36
009C:  MOVF   38,W
009D:  MOVWF  35
009E:  CLRF   27
009F:  BTFSC  0B.7
00A0:  BSF    27.7
00A1:  BCF    0B.7
....................    
....................    output_HIGH (__servo_pin);
00A2:  MOVF   35,W
00A3:  MOVWF  57
00A4:  MOVLW  01
00A5:  MOVWF  58
00A6:  CLRF   5A
00A7:  CLRF   59
00A8:  CALL   031
00A9:  BTFSC  27.7
00AA:  BSF    0B.7
00AB:  CLRF   27
00AC:  BTFSC  0B.7
00AD:  BSF    27.7
00AE:  BCF    0B.7
00AF:  MOVF   35,W
00B0:  MOVWF  57
00B1:  CLRF   58
00B2:  CLRF   5A
00B3:  MOVLW  80
00B4:  MOVWF  59
00B5:  CALL   031
00B6:  BTFSC  27.7
00B7:  BSF    0B.7
....................    
....................    setup_timer_1 ( T1_INTERNAL | T1_DIV_BY_2 );
00B8:  MOVLW  15
00B9:  MOVWF  10
00BA:  BCF    0A.3
00BB:  BCF    0A.4
00BC:  GOTO   4FE (RETURN)
.................... }
.................... 
.................... /**
....................  * @brief Sets control signal in seconds.
....................  * 
....................  * @param Seconds
....................  *
....................  * @description This function calculates Timer1 overflow value for the given
....................  *              seconds, then loads this value on Timer1 overflow registers
....................  */
.................... void set_servo_ms( float seconds ) {
....................    if( seconds > SERVO_DUTY_CYCLE_POS )
*
03F5:  MOVLW  99
03F6:  MOVWF  48
03F7:  MOVLW  BB
03F8:  MOVWF  47
03F9:  MOVLW  16
03FA:  MOVWF  46
03FB:  MOVLW  76
03FC:  MOVWF  45
03FD:  MOVF   40,W
03FE:  MOVWF  4C
03FF:  MOVF   3F,W
0400:  MOVWF  4B
0401:  MOVF   3E,W
0402:  MOVWF  4A
0403:  MOVF   3D,W
0404:  MOVWF  49
0405:  CALL   146
0406:  BTFSS  03.0
0407:  GOTO   410
....................       seconds = SERVO_DUTY_CYCLE_POS;
0408:  MOVLW  99
0409:  MOVWF  40
040A:  MOVLW  BB
040B:  MOVWF  3F
040C:  MOVLW  16
040D:  MOVWF  3E
040E:  MOVLW  76
040F:  MOVWF  3D
....................    if( seconds < 0 )
0410:  MOVF   40,W
0411:  MOVWF  48
0412:  MOVF   3F,W
0413:  MOVWF  47
0414:  MOVF   3E,W
0415:  MOVWF  46
0416:  MOVF   3D,W
0417:  MOVWF  45
0418:  CLRF   4C
0419:  CLRF   4B
041A:  CLRF   4A
041B:  CLRF   49
041C:  CALL   146
041D:  BTFSS  03.0
041E:  GOTO   423
....................       seconds = 0;
041F:  CLRF   40
0420:  CLRF   3F
0421:  CLRF   3E
0422:  CLRF   3D
....................    unsigned int16 starting_point = (unsigned int16)(65535 - ( (SERVO_FOSC * seconds)/(4 * SERVO_T_PREESCALER) ));
....................    unsigned int16 complement = (unsigned int16)(65535 - ( (SERVO_FOSC * (SERVO_DUTY_CYCLE_POS - seconds))/(4 * SERVO_T_PREESCALER) ));
0423:  MOVLW  80
0424:  MOVWF  48
0425:  MOVLW  96
0426:  MOVWF  47
0427:  MOVLW  18
0428:  MOVWF  46
0429:  MOVLW  97
042A:  MOVWF  45
042B:  MOVF   40,W
042C:  MOVWF  4C
042D:  MOVF   3F,W
042E:  MOVWF  4B
042F:  MOVF   3E,W
0430:  MOVWF  4A
0431:  MOVF   3D,W
0432:  MOVWF  49
0433:  CALL   0D1
0434:  MOVF   7A,W
0435:  MOVWF  48
0436:  MOVF   79,W
0437:  MOVWF  47
0438:  MOVF   78,W
0439:  MOVWF  46
043A:  MOVF   77,W
043B:  MOVWF  45
043C:  MOVF   7A,W
043D:  MOVWF  4C
043E:  MOVF   79,W
043F:  MOVWF  4B
0440:  MOVF   78,W
0441:  MOVWF  4A
0442:  MOVF   77,W
0443:  MOVWF  49
0444:  CLRF   50
0445:  CLRF   4F
0446:  CLRF   4E
0447:  MOVLW  82
0448:  MOVWF  4D
0449:  CALL   185
044A:  BSF    03.1
044B:  CLRF   48
044C:  MOVLW  FF
044D:  MOVWF  47
044E:  MOVLW  7F
044F:  MOVWF  46
0450:  MOVLW  8E
0451:  MOVWF  45
0452:  MOVF   7A,W
0453:  MOVWF  4C
0454:  MOVF   79,W
0455:  MOVWF  4B
0456:  MOVF   78,W
0457:  MOVWF  4A
0458:  MOVF   77,W
0459:  MOVWF  49
045A:  CALL   24F
045B:  MOVF   7A,W
045C:  MOVWF  48
045D:  MOVF   79,W
045E:  MOVWF  47
045F:  MOVF   78,W
0460:  MOVWF  46
0461:  MOVF   77,W
0462:  MOVWF  45
0463:  CALL   390
0464:  MOVF   79,W
0465:  MOVWF  42
0466:  MOVF   78,W
0467:  MOVWF  41
0468:  BSF    03.1
0469:  MOVLW  99
046A:  MOVWF  48
046B:  MOVLW  BB
046C:  MOVWF  47
046D:  MOVLW  16
046E:  MOVWF  46
046F:  MOVLW  76
0470:  MOVWF  45
0471:  MOVF   40,W
0472:  MOVWF  4C
0473:  MOVF   3F,W
0474:  MOVWF  4B
0475:  MOVF   3E,W
0476:  MOVWF  4A
0477:  MOVF   3D,W
0478:  MOVWF  49
0479:  CALL   24F
047A:  MOVLW  80
047B:  MOVWF  48
047C:  MOVLW  96
047D:  MOVWF  47
047E:  MOVLW  18
047F:  MOVWF  46
0480:  MOVLW  97
0481:  MOVWF  45
0482:  MOVF   7A,W
0483:  MOVWF  4C
0484:  MOVF   79,W
0485:  MOVWF  4B
0486:  MOVF   78,W
0487:  MOVWF  4A
0488:  MOVF   77,W
0489:  MOVWF  49
048A:  CALL   0D1
048B:  MOVF   7A,W
048C:  MOVWF  48
048D:  MOVF   79,W
048E:  MOVWF  47
048F:  MOVF   78,W
0490:  MOVWF  46
0491:  MOVF   77,W
0492:  MOVWF  45
0493:  MOVF   7A,W
0494:  MOVWF  4C
0495:  MOVF   79,W
0496:  MOVWF  4B
0497:  MOVF   78,W
0498:  MOVWF  4A
0499:  MOVF   77,W
049A:  MOVWF  49
049B:  CLRF   50
049C:  CLRF   4F
049D:  CLRF   4E
049E:  MOVLW  82
049F:  MOVWF  4D
04A0:  CALL   185
04A1:  BSF    03.1
04A2:  CLRF   48
04A3:  MOVLW  FF
04A4:  MOVWF  47
04A5:  MOVLW  7F
04A6:  MOVWF  46
04A7:  MOVLW  8E
04A8:  MOVWF  45
04A9:  MOVF   7A,W
04AA:  MOVWF  4C
04AB:  MOVF   79,W
04AC:  MOVWF  4B
04AD:  MOVF   78,W
04AE:  MOVWF  4A
04AF:  MOVF   77,W
04B0:  MOVWF  49
04B1:  CALL   24F
04B2:  MOVF   7A,W
04B3:  MOVWF  48
04B4:  MOVF   79,W
04B5:  MOVWF  47
04B6:  MOVF   78,W
04B7:  MOVWF  46
04B8:  MOVF   77,W
04B9:  MOVWF  45
04BA:  CALL   390
04BB:  MOVF   79,W
04BC:  MOVWF  44
04BD:  MOVF   78,W
04BE:  MOVWF  43
....................    __servoSignal[1] = starting_point;
04BF:  MOVF   42,W
04C0:  MOVWF  2C
04C1:  MOVF   41,W
04C2:  MOVWF  2B
....................    __servoSignal[2] = complement;
04C3:  MOVF   44,W
04C4:  MOVWF  2E
04C5:  MOVF   43,W
04C6:  MOVWF  2D
.................... }
.................... 
.................... /**
....................  * @brief Sets the servo angle.
....................  * 
....................  * @param angle in degrees
....................  *
....................  * @description This function calculates the time in seconds that turn the
....................  *              servo to the input angle
....................  */
.................... void set_servo_angle ( int angle ) {
....................    if( angle > 180 )
*
03AF:  MOVF   38,W
03B0:  SUBLW  B4
03B1:  BTFSC  03.0
03B2:  GOTO   3B5
....................       angle = 180;
03B3:  MOVLW  B4
03B4:  MOVWF  38
....................    float __t = (SERVO_DUTY_CYCLE_POS/180.0) * (float)angle;
03B5:  CLRF   3E
03B6:  MOVF   38,W
03B7:  MOVWF  3D
*
03D4:  MOVLW  24
03D5:  MOVWF  48
03D6:  MOVLW  60
03D7:  MOVWF  47
03D8:  MOVLW  56
03D9:  MOVWF  46
03DA:  MOVLW  6E
03DB:  MOVWF  45
03DC:  MOVF   7A,W
03DD:  MOVWF  4C
03DE:  MOVF   79,W
03DF:  MOVWF  4B
03E0:  MOVF   78,W
03E1:  MOVWF  4A
03E2:  MOVF   77,W
03E3:  MOVWF  49
03E4:  CALL   0D1
03E5:  MOVF   7A,W
03E6:  MOVWF  3C
03E7:  MOVF   79,W
03E8:  MOVWF  3B
03E9:  MOVF   78,W
03EA:  MOVWF  3A
03EB:  MOVF   77,W
03EC:  MOVWF  39
....................    set_servo_ms( __t );
03ED:  MOVF   3C,W
03EE:  MOVWF  40
03EF:  MOVF   3B,W
03F0:  MOVWF  3F
03F1:  MOVF   3A,W
03F2:  MOVWF  3E
03F3:  MOVF   39,W
03F4:  MOVWF  3D
*
04C7:  RETURN
.................... }
.................... 
.................... #endif // _SERVO_H_
.................... 
.................... #use delay( clock = 20Mhz, crystal ) // Tipo de oscilador y frecuencia dependiendo del microcontrolador
*
00BD:  MOVLW  39
00BE:  MOVWF  04
00BF:  BCF    03.7
00C0:  MOVF   00,W
00C1:  BTFSC  03.2
00C2:  GOTO   0D0
00C3:  MOVLW  06
00C4:  MOVWF  78
00C5:  CLRF   77
00C6:  DECFSZ 77,F
00C7:  GOTO   0C6
00C8:  DECFSZ 78,F
00C9:  GOTO   0C5
00CA:  MOVLW  7B
00CB:  MOVWF  77
00CC:  DECFSZ 77,F
00CD:  GOTO   0CC
00CE:  DECFSZ 00,F
00CF:  GOTO   0C3
00D0:  RETURN
.................... 
.................... void main( void ) {
*
04C8:  MOVF   03,W
04C9:  ANDLW  1F
04CA:  MOVWF  03
04CB:  CLRF   28
04CC:  MOVLW  FF
04CD:  MOVWF  36
04CE:  MOVWF  35
04CF:  MOVWF  37
04D0:  BSF    03.5
04D1:  BSF    03.6
04D2:  MOVF   09,W
04D3:  ANDLW  C0
04D4:  MOVWF  09
04D5:  BCF    03.6
04D6:  BCF    1F.4
04D7:  BCF    1F.5
04D8:  MOVLW  00
04D9:  BSF    03.6
04DA:  MOVWF  08
04DB:  BCF    03.5
04DC:  CLRF   07
04DD:  CLRF   08
04DE:  CLRF   09
04DF:  BCF    03.7
....................    set_tris_c( 0xFB );                      // Configura C2 como salida
*
04F5:  MOVLW  FB
04F6:  BSF    03.5
04F7:  MOVWF  07
04F8:  BCF    03.5
04F9:  MOVWF  37
....................    setup_servo( PIN_C2 );                   // Configura el PIN C2 como el servo
04FA:  CLRF   39
04FB:  MOVLW  3A
04FC:  MOVWF  38
04FD:  GOTO   090
.................... 
....................    while ( 1 ) {
....................       delay_ms( 1000 );
04FE:  MOVLW  04
04FF:  MOVWF  38
0500:  MOVLW  FA
0501:  MOVWF  39
0502:  CALL   0BD
0503:  DECFSZ 38,F
0504:  GOTO   500
....................       set_servo_angle (0);                  // Configura la posición del servo
0505:  CLRF   38
0506:  CALL   3AF
....................       delay_ms( 1000 );
0507:  MOVLW  04
0508:  MOVWF  38
0509:  MOVLW  FA
050A:  MOVWF  39
050B:  CALL   0BD
050C:  DECFSZ 38,F
050D:  GOTO   509
....................       set_servo_angle (45);
050E:  MOVLW  2D
050F:  MOVWF  38
0510:  CALL   3AF
....................       delay_ms( 1000 );
0511:  MOVLW  04
0512:  MOVWF  38
0513:  MOVLW  FA
0514:  MOVWF  39
0515:  CALL   0BD
0516:  DECFSZ 38,F
0517:  GOTO   513
....................       set_servo_angle (90);
0518:  MOVLW  5A
0519:  MOVWF  38
051A:  CALL   3AF
....................       delay_ms( 1000 );
051B:  MOVLW  04
051C:  MOVWF  38
051D:  MOVLW  FA
051E:  MOVWF  39
051F:  CALL   0BD
0520:  DECFSZ 38,F
0521:  GOTO   51D
....................       set_servo_angle (135);
0522:  MOVLW  87
0523:  MOVWF  38
0524:  CALL   3AF
....................       delay_ms( 1000 );
0525:  MOVLW  04
0526:  MOVWF  38
0527:  MOVLW  FA
0528:  MOVWF  39
0529:  CALL   0BD
052A:  DECFSZ 38,F
052B:  GOTO   527
....................       set_servo_angle (180);
052C:  MOVLW  B4
052D:  MOVWF  38
052E:  CALL   3AF
052F:  GOTO   4FE
....................    }
.................... }
0530:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
